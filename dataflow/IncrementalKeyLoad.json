{
	"name": "IncrementalKeyLoad",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_EmpId",
						"type": "DatasetReference"
					},
					"name": "EmpId"
				},
				{
					"dataset": {
						"referenceName": "DS_EmpNoId",
						"type": "DatasetReference"
					},
					"name": "EmpNoId"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_EmpDeptNew_SInk",
						"type": "DatasetReference"
					},
					"name": "SInktoIncrement"
				}
			],
			"transformations": [
				{
					"name": "AddDummyColumn"
				},
				{
					"name": "AddMaxID"
				},
				{
					"name": "JoinMaxIDwithEmpNoId"
				},
				{
					"name": "AddIdColumn"
				},
				{
					"name": "AddIDwithMaxId"
				},
				{
					"name": "DeleteDummyMaxID"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as string,",
				"          { Name} as string,",
				"          { Gender} as string,",
				"          { Dept} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmpId",
				"source(output(",
				"          Name as string,",
				"          { Gender} as string,",
				"          { Dept} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmpNoId",
				"EmpId derive(dummy = 'dummy') ~> AddDummyColumn",
				"AddDummyColumn aggregate(groupBy(dummy),",
				"     MaxId = max(Id)) ~> AddMaxID",
				"AddMaxID, EmpNoId join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMaxIDwithEmpNoId",
				"JoinMaxIDwithEmpNoId keyGenerate(output(Id as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> AddIdColumn",
				"AddIdColumn derive(Id = toString(toInteger(Id) + toInteger(MaxId))) ~> AddIDwithMaxId",
				"AddIDwithMaxId select(mapColumn(",
				"          Id,",
				"          Name,",
				"          { Gender},",
				"          { Dept}",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> DeleteDummyMaxID",
				"EmpId, DeleteDummyMaxID union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['EmpDeptWithIDs.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SInktoIncrement"
			]
		}
	}
}